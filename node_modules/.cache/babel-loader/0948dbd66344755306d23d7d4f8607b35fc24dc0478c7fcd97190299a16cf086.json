{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/RegisterClient.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterClient({\n  id,\n  username\n}) {\n  _s();\n  // USE STATE AND VALIDATION\n\n  const history = useHistory();\n  const [message, setMessage] = useState('');\n  const initialValues = {\n    name: ''\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Required')\n  });\n\n  // SUBMIT REGISTRATION FORM\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      const response = await fetch(`/clients/user_${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        setTimeout(() => {\n          history.push(`/account_home/${username}`);\n        }, 2000);\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        const error = await response.json();\n        console.error('Client signup failed:', error);\n      }\n    } catch (error) {\n      console.error('Error during Client signup:', error);\n    }\n    setSubmitting(false);\n  };\n\n  // JSX\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Register For new Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"registration\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Register User: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit_button\",\n              type: \"submit\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterClient, \"e8uWabS7TpNhb5XlY3cF4a1jI6M=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterClient;\nexport default RegisterClient;\nvar _c;\n$RefreshReg$(_c, \"RegisterClient\");","map":{"version":3,"names":["React","useState","useHistory","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","RegisterClient","id","username","_s","history","message","setMessage","initialValues","name","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","push","window","location","reload","error","json","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","component","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/RegisterClient.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction RegisterClient({ id, username }) {\n\n// USE STATE AND VALIDATION\n\n    const history = useHistory()\n    const [message, setMessage] = useState('');\n\n    const initialValues = {\n        name: '',\n    }\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Required'),\n    })\n\n    // SUBMIT REGISTRATION FORM\n\n    const handleSubmit = async (values, { setSubmitting }) => {\n        try {\n            const response = await fetch(`/clients/user_${id}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(values),\n            })\n\n            if (response.ok) {\n                setTimeout(() => {\n                    history.push(`/account_home/${username}`)\n                }, 2000);\n                setTimeout(() => {\n                    window.location.reload()\n                }, 2000)\n            } else {\n                const error = await response.json()\n                console.error('Client signup failed:', error)\n            }\n        } catch (error) {\n            console.error('Error during Client signup:', error)\n        }\n\n        setSubmitting(false);\n    }\n\n    // JSX\n\n    return (\n        <div>\n            <h1 className=\"title\">Register For new Account</h1>\n            {message ? (\n                <div>\n                    <div>{message}</div>\n                </div>\n            ) : (\n                <div id=\"registration\">\n                    <div>Register User: </div>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        onSubmit={handleSubmit}\n                    >\n                        <Form>\n                            <br />\n                            <div>\n                                <label htmlFor=\"name\">Username:</label>\n                                <Field type=\"text\" id=\"name\" name=\"name\" />\n                                <ErrorMessage name=\"name\" component=\"div\" />\n                            </div>\n                            <br />\n                            <div>\n                                <button className=\"submit_button\" type=\"submit\">Sign Up</button>\n                            </div>\n                        </Form>\n                    </Formik>\n                </div>\n            )}\n        </div>\n    )\n}\n\n\nexport default RegisterClient"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,2CAA2C;AACtE,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,cAAcA,CAAC;EAAEC,EAAE;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAE1C;;EAEI,MAAMC,OAAO,GAAGZ,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,aAAa,GAAG;IAClBC,IAAI,EAAE;EACV,CAAC;EAED,MAAMC,gBAAgB,GAAGZ,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACxCH,IAAI,EAAEX,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU;EAC1C,CAAC,CAAC;;EAEF;;EAEA,MAAMC,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAE;IAAEC;EAAc,CAAC,KAAK;IACtD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBjB,EAAG,EAAC,EAAE;QAChDkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,MAAM;MAC/B,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACO,EAAE,EAAE;QACbC,UAAU,CAAC,MAAM;UACbrB,OAAO,CAACsB,IAAI,CAAE,iBAAgBxB,QAAS,EAAC,CAAC;QAC7C,CAAC,EAAE,IAAI,CAAC;QACRuB,UAAU,CAAC,MAAM;UACbE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM;QACH,MAAMC,KAAK,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;QACnCC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZE,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;IAEAd,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;;EAED;;EAEA,oBACIjB,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAImC,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClDjC,OAAO,gBACJN,OAAA;MAAAkC,QAAA,eACIlC,OAAA;QAAAkC,QAAA,EAAM5B;MAAO;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,gBAENvC,OAAA;MAAKE,EAAE,EAAC,cAAc;MAAAgC,QAAA,gBAClBlC,OAAA;QAAAkC,QAAA,EAAK;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BvC,OAAA,CAACN,MAAM;QACHc,aAAa,EAAEA,aAAc;QAC7BE,gBAAgB,EAAEA,gBAAiB;QACnC8B,QAAQ,EAAEzB,YAAa;QAAAmB,QAAA,eAEvBlC,OAAA,CAACJ,IAAI;UAAAsC,QAAA,gBACDlC,OAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNvC,OAAA;YAAAkC,QAAA,gBACIlC,OAAA;cAAOyC,OAAO,EAAC,MAAM;cAAAP,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvCvC,OAAA,CAACL,KAAK;cAAC+C,IAAI,EAAC,MAAM;cAACxC,EAAE,EAAC,MAAM;cAACO,IAAI,EAAC;YAAM;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3CvC,OAAA,CAACH,YAAY;cAACY,IAAI,EAAC,MAAM;cAACkC,SAAS,EAAC;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACNvC,OAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNvC,OAAA;YAAAkC,QAAA,eACIlC,OAAA;cAAQmC,SAAS,EAAC,eAAe;cAACO,IAAI,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnC,EAAA,CA/EQH,cAAc;EAAA,QAIHR,UAAU;AAAA;AAAAmD,EAAA,GAJrB3C,cAAc;AAkFvB,eAAeA,cAAc;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}