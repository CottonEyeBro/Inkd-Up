{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    identifier: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const validationSchema = Yup.object({\n    identifier: Yup.string().required('Username or email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const onSubmit = (values, {\n    setSubmitting\n  }) => {\n    setSubmitting(true);\n    console.log('clicked');\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(resp => {\n      if (resp.ok) {\n        return resp.json();\n      } else {\n        throw new Error('Invalid Login Credentials');\n      }\n    }).then(user => onLogin(user)).catch(error => {\n      alert(error.message);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    console.log('Login form submitted:', values);\n  };\n  const onLogin = user => {\n    // Handle the login logic when the response is successful\n    console.log('User logged in:', user);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: formData,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"identifier\",\n          children: \"Username or Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          id: \"identifier\",\n          name: \"identifier\",\n          value: formData.identifier,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"identifier\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"th/L5txGuCla+H8m+d5SuOStcUw=\");\n_c = LoginForm;\n;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","identifier","password","errors","setErrors","isLoading","setIsLoading","validationSchema","object","string","required","handleChange","e","name","value","target","onSubmit","values","setSubmitting","console","log","fetch","method","headers","body","JSON","stringify","then","resp","ok","json","Error","user","onLogin","catch","error","alert","message","finally","initialValues","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","component","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction LoginForm() {\n    const [formData, setFormData] = useState({\n        identifier: '',\n        password: '',\n    });\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const validationSchema = Yup.object({\n        identifier: Yup.string().required('Username or email is required'),\n        password: Yup.string().required('Password is required'),\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const onSubmit = (values, { setSubmitting }) => {\n        setSubmitting(true)\n        console.log('clicked')\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n        })\n            .then((resp) => {\n                if (resp.ok) {\n                    return resp.json();\n                } else {\n                    throw new Error('Invalid Login Credentials');\n                }\n            })\n            .then((user) => onLogin(user))\n            .catch((error) => {\n                alert(error.message);\n            })\n            .finally(() => {\n                setSubmitting(false);\n            })\n        console.log('Login form submitted:', values);\n    };\n\n    const onLogin = (user) => {\n        // Handle the login logic when the response is successful\n        console.log('User logged in:', user);\n    };\n\n\n\n    return (\n        <Formik\n            initialValues={formData}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            <Form>\n                <div>\n                    <label htmlFor=\"identifier\">Username or Email:</label>\n                    <Field\n                        type=\"text\"\n                        id=\"identifier\"\n                        name=\"identifier\"\n                        value={formData.identifier}\n                        onChange={handleChange}\n                    />\n                    <ErrorMessage name=\"identifier\" component=\"div\" />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <Field\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleChange}\n                    />\n                    <ErrorMessage name=\"password\" component=\"div\" />\n                </div>\n                <button type=\"submit\">Login</button>\n            </Form>\n        </Formik >\n    );\n};\n\nexport default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}