{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // const onSubmit = () => {\n  //     console.log('clicked')\n  //     fetch('/login', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify(formData),\n  //     })\n  //         .then((resp) => {\n  //             if (resp.ok) {\n  //                 return resp.json();\n  //             } else {\n  //                 alert('Invalid Login Credentials');\n  //             }\n  //         })\n  //         .then((user) => onLogin(user))\n  //         .catch((error) => {\n  //             alert(error.message);\n  //         })\n  //     console.log('Login form submitted:',);\n  // };\n\n  // const onLogin = (user) => {\n  //     // Handle the login logic when the response is successful\n  //     console.log('User logged in:', user);\n  // };\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('/users'); // Fetch customer data\n      const userData = await response.json();\n      const user = userData.find(user => user.username === formData.username);\n      console.log(user);\n      if (user && user.password === formData.password) {\n        // Valid login\n        console.log('Login successful');\n        console.log(user.id);\n        // setLoggedIn(!loggedIn)\n        // setLoggedInID(customer.id)\n        // history.push('/Account_Manager')\n      } else {\n        // Invalid login\n        // setValidLogin('Invalid username or password');\n        console.log('Invalid Login');\n      }\n    } catch (error) {\n      console.error('Error fetching customer data', error);\n    }\n    ;\n  };\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"DRZTgvRIlp23X+umG8KKW8ZcIEw=\");\n_c = LoginForm;\n;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","username","password","handleChange","e","name","value","target","handleLogin","response","fetch","userData","json","user","find","console","log","id","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction LoginForm() {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: '',\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    // const onSubmit = () => {\n    //     console.log('clicked')\n    //     fetch('/login', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify(formData),\n    //     })\n    //         .then((resp) => {\n    //             if (resp.ok) {\n    //                 return resp.json();\n    //             } else {\n    //                 alert('Invalid Login Credentials');\n    //             }\n    //         })\n    //         .then((user) => onLogin(user))\n    //         .catch((error) => {\n    //             alert(error.message);\n    //         })\n    //     console.log('Login form submitted:',);\n    // };\n\n    // const onLogin = (user) => {\n    //     // Handle the login logic when the response is successful\n    //     console.log('User logged in:', user);\n    // };\n\n    const handleLogin = async () => {\n        try{\n            const response = await fetch('/users') // Fetch customer data\n            const userData = await response.json()\n            const user = userData.find((user) => user.username === formData.username);\n            \n            console.log(user)\n            if (user && user.password === formData.password) {\n                // Valid login\n                console.log('Login successful')\n                console.log(user.id)\n                // setLoggedIn(!loggedIn)\n                // setLoggedInID(customer.id)\n                // history.push('/Account_Manager')\n            } else {\n                // Invalid login\n                // setValidLogin('Invalid username or password');\n                console.log('Invalid Login')\n            }\n            \n        } catch (error) {\n            console.error('Error fetching customer data', error);\n        };\n    };\n    console.log(formData)\n\n\n\n    return (\n        <div>\n            <div>\n                <label>Username:</label>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n            </div>\n            <button onClick={handleLogin}>Login</button>\n        </div>\n    );\n};\n\nexport default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}