{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const initialValues = {\n    username: '',\n    password: ''\n  };\n  const history = useHistory();\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Required'),\n    password: Yup.string().required('Required')\n  });\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      // Send login request to your backend\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        const user = await response.json();\n        setMessage('Loggin in, Redirecting to home...');\n        setTimeout(() => {\n          history.push(`/account_home/${user.username}`);\n        }, 2000);\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        const error = await response.json();\n        console.error('Login failed:', error);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login\",\n    children: message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"username\",\n            id: \"username\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"username\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"q0svoGapzqdCuSeL4QQ1g2AJpxY=\", false, function () {\n  return [useHistory];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useHistory","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","LoginForm","_s","message","setMessage","initialValues","username","password","history","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","user","json","setTimeout","push","window","location","reload","error","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","component","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst LoginForm = () => {\n\n    const [message, setMessage] = useState('');\n\n\n    const initialValues = {\n        username: '',\n        password: '',\n    };\n    const history = useHistory()\n\n    const validationSchema = Yup.object().shape({\n        username: Yup.string().required('Required'),\n        password: Yup.string().required('Required'),\n    });\n\n    const handleSubmit = async (values, { setSubmitting }) => {\n        try {\n            // Send login request to your backend\n            const response = await fetch('/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(values),\n            });\n\n            if (response.ok) {\n                const user = await response.json();\n                setMessage('Loggin in, Redirecting to home...')\n                setTimeout(() => {\n                history.push(`/account_home/${user.username}`)\n                }, 2000)\n                setTimeout(() => {\n                    window.location.reload()\n                }, 2000)\n            } else {\n                const error = await response.json();\n                console.error('Login failed:', error);\n            }\n        } catch (error) {\n            console.error('Error during login:', error);\n        }\n\n        setSubmitting(false);\n    };\n\n    return (\n        <div id='login'>\n            {message ? (<div>{message}</div>) :(\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n        >\n            <Form>\n                <br />\n                <div>\n                    <label htmlFor=\"username\">Username:</label>\n                    <Field type=\"username\" id=\"username\" name=\"username\" />\n                    <ErrorMessage name=\"username\" component=\"div\" />\n                </div>\n                <br />\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <Field type=\"password\" id=\"password\" name=\"password\" />\n                    <ErrorMessage name=\"password\" component=\"div\" />\n                </div>\n                <br />\n                <div>\n\n                    <button type=\"submit\">Login</button>\n                </div>\n            </Form>\n        </Formik>\n        )}\n        </div>\n    );\n};\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}