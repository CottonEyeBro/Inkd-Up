{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentForm({\n  loggedIn,\n  currentArtist,\n  shops\n}) {\n  _s();\n  const initialValues = {\n    date: '',\n    time: '',\n    shop_id: '' // Corrected the field name\n  };\n\n  const history = useHistory();\n  const validationSchema = Yup.object({\n    date: Yup.date().required('Date is required'),\n    time: Yup.string().required('Time is required'),\n    shop_id: Yup.string().required('Shop is required')\n  });\n  const submitAppointment = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      const response = await fetch('/appointments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: values.date,\n          time: values.time,\n          artist_id: currentArtist.id,\n          client_id: loggedIn.client[0].id,\n          shop_id: values.shop_id\n        })\n      });\n      if (response.ok) {\n        await response.json();\n        alert('Appointment created successfully!');\n        history.push(`/userprofile/:${loggedIn.username}`);\n      } else {\n        console.error('Error:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: submitAppointment,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"date\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"time\",\n            id: \"time\",\n            name: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"time\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"shop_id\",\n            children: \"Shop:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"select\",\n            id: \"shop_id\",\n            name: \"shop_id\",\n            children: shops.map(shop => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: shop.id,\n              children: shop.name\n            }, shop.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"shop_id\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Confirm Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please Login To Set Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(AppointmentForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useHistory","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","AppointmentForm","loggedIn","currentArtist","shops","_s","initialValues","date","time","shop_id","history","validationSchema","object","required","string","submitAppointment","values","setSubmitting","response","fetch","method","headers","body","JSON","stringify","artist_id","id","client_id","client","ok","json","alert","push","username","console","error","statusText","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","component","as","map","shop","value","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\n\nfunction AppointmentForm({ loggedIn, currentArtist, shops }) {\n    const initialValues = {\n        date: '',\n        time: '',\n        shop_id: '', // Corrected the field name\n    };\n\n    const history = useHistory();\n\n    const validationSchema = Yup.object({\n        date: Yup.date().required('Date is required'),\n        time: Yup.string().required('Time is required'),\n        shop_id: Yup.string().required('Shop is required'),\n    });\n\n    const submitAppointment = async (values, { setSubmitting }) => {\n        try {\n            const response = await fetch('/appointments', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    date: values.date,\n                    time: values.time,\n                    artist_id: currentArtist.id,\n                    client_id: loggedIn.client[0].id,\n                    shop_id: values.shop_id,\n                }),\n            });\n\n            if (response.ok) {\n                await response.json();\n                alert('Appointment created successfully!');\n                history.push(`/userprofile/:${loggedIn.username}`);\n            } else {\n                console.error('Error:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        } finally {\n            setSubmitting(false);\n        }\n    };\n\n    return (\n        <div>\n            {loggedIn ? (\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={submitAppointment}\n                >\n                    <Form>\n                        <div>\n                            <label htmlFor='date'>Date:</label>\n                            <Field type='date' id='date' name='date' />\n                            <ErrorMessage name='date' component='div' />\n                        </div>\n                        <div>\n                            <label htmlFor='time'>Time:</label>\n                            <Field type='time' id='time' name='time' />\n                            <ErrorMessage name='time' component='div' />\n                        </div>\n                        <div>\n                            <label htmlFor='shop_id'>Shop:</label>\n                            <Field as='select' id='shop_id' name='shop_id'>\n                                {/* Map through shops array and create options */}\n                                {shops.map(shop => (\n                                    <option key={shop.id} value={shop.id}>\n                                        {shop.name}\n                                    </option>\n                                ))}\n                            </Field>\n                            <ErrorMessage name='shop_id' component='div' />\n                        </div>\n                        <button type='submit'>Confirm Appointment</button>\n                    </Form>\n                </Formik>\n            ) : (\n                <h3>Please Login To Set Appointment</h3>\n            )}\n        </div>\n    );\n}\n\nexport default AppointmentForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}