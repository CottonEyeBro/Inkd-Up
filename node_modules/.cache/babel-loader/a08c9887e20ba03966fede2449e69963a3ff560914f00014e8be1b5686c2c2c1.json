{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/ProfileManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport UserEdit from \"./UserEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileManager({\n  loggedIn,\n  setLoggedIn,\n  setUsers\n}) {\n  _s();\n  const history = useHistory();\n  const [message, setMessage] = useState('');\n  const [isClient, setIsClient] = useState(false);\n  const [isArtist, setIsArtist] = useState(false);\n  const [isShop, setIsShop] = useState(false);\n  const initialValues = {\n    username: `${loggedIn.username}`,\n    email: `${loggedIn.email}`,\n    password: `${loggedIn.password}`,\n    confirmPassword: `${loggedIn.password}`\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required')\n  });\n  console.log(loggedIn.id);\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      const response = await fetch(`/user/${loggedIn.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        const updatedUser = await response.json();\n        setMessage('Update successful. Redirecting to home...');\n        setLoggedIn(updatedUser);\n        setTimeout(() => {\n          history.push(`/account_home/${updatedUser.username}`);\n        }, 2000);\n      } else {\n        const error = await response.json();\n        console.error('User update failed:', error);\n      }\n    } catch (error) {\n      console.error('Error during User update:', error);\n    }\n    setSubmitting(false);\n  };\n  function handleDeleteUser(id) {\n    fetch(`/users/${id}`, {\n      method: \"DELETE\"\n    }).then(resp => {\n      if (resp.ok) {\n        setUsers(userArr => userArr.filter(user => user.id !== id));\n        alert(`user ${loggedIn.username} Deleted!`);\n        history.push('/');\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserEdit, {\n      loggedIn: loggedIn,\n      setLoggedIn: setLoggedIn,\n      setUsers: setUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileManager, \"5xpt+3HNhBPGV2Vis4MT/rTEbpY=\", false, function () {\n  return [useHistory];\n});\n_c = ProfileManager;\nexport default ProfileManager;\nvar _c;\n$RefreshReg$(_c, \"ProfileManager\");","map":{"version":3,"names":["React","useState","useHistory","Formik","Field","Form","ErrorMessage","Yup","UserEdit","jsxDEV","_jsxDEV","ProfileManager","loggedIn","setLoggedIn","setUsers","_s","history","message","setMessage","isClient","setIsClient","isArtist","setIsArtist","isShop","setIsShop","initialValues","username","email","password","confirmPassword","validationSchema","object","shape","string","required","oneOf","ref","console","log","id","handleSubmit","values","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","updatedUser","json","setTimeout","push","error","handleDeleteUser","then","resp","userArr","filter","user","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/ProfileManager.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport UserEdit from \"./UserEdit\";\n\nfunction ProfileManager({ loggedIn, setLoggedIn, setUsers }) {\n    const history = useHistory()\n    const [message, setMessage] = useState('');\n    const [isClient, setIsClient] = useState(false)\n    const [isArtist, setIsArtist] = useState(false)\n    const [isShop, setIsShop] = useState(false)\n\n    const initialValues = {\n        username: `${loggedIn.username}`,\n        email: `${loggedIn.email}`,\n        password: `${loggedIn.password}`,\n        confirmPassword: `${loggedIn.password}`,\n    };\n\n    const validationSchema = Yup.object().shape({\n        username: Yup.string().required('Required'),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        password: Yup.string().required('Required'),\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Required'),\n    });\n    console.log(loggedIn.id)\n    const handleSubmit = async (values, { setSubmitting }) => {\n        try {\n            const response = await fetch(`/user/${loggedIn.id}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(values),\n            });\n\n            if (response.ok) {\n                const updatedUser = await response.json();\n                setMessage('Update successful. Redirecting to home...');\n                setLoggedIn(updatedUser);\n                setTimeout(() => {\n                    history.push(`/account_home/${updatedUser.username}`);\n                }, 2000);\n            } else {\n                const error = await response.json();\n                console.error('User update failed:', error);\n            }\n        } catch (error) {\n            console.error('Error during User update:', error);\n        }\n\n        setSubmitting(false);\n    }\n\n\n    function handleDeleteUser(id) {\n        fetch(`/users/${id}`, { method: \"DELETE\" }).then((resp) => {\n            if (resp.ok) {\n                setUsers((userArr) =>\n                    userArr.filter((user) => user.id !== id)\n                );\n                alert(`user ${loggedIn.username} Deleted!`)\n                history.push('/')\n            }\n        });\n    }\n\n\n    return (\n        <div>\n            <UserEdit \n            loggedIn={loggedIn}\n            setLoggedIn={setLoggedIn}\n            setUsers={setUsers}\n            />\n        </div>\n    )\n}\n\nexport default ProfileManager"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}