{"ast":null,"code":"var _jsxFileName = \"/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    identifier: '',\n    password: ''\n  });\n  const validationSchema = Yup.object({\n    identifier: Yup.string().required('Username or email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const onSubmit = values => {\n    console.log('clicked');\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(resp => {\n      if (resp.ok) {\n        return resp.json();\n      } else {\n        throw new Error('Invalid Login Credentials');\n      }\n    }).then(user => onLogin(user)).catch(error => {\n      alert(error.message);\n    });\n    console.log('Login form submitted:', values);\n  };\n  const onLogin = user => {\n    // Handle the login logic when the response is successful\n    console.log('User logged in:', user);\n  };\n  console.log(formData);\n  const handleSubmit = values => {\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(data => {\n          // setUser(data.user);\n          console.log(data);\n          // Redirect to the user gallery upon successful login\n          // history.push(\"/usergallery\");\n        });\n      } else {\n        alert(\"Invalid username or password\");\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          password: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"User name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"c98D5tWPcWC6AA2/Nl9CoRnPCd4=\");\n_c = LoginForm;\n;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","identifier","password","validationSchema","object","string","required","handleChange","e","name","value","target","onSubmit","values","console","log","fetch","method","headers","body","JSON","stringify","then","resp","ok","json","Error","user","onLogin","catch","error","alert","message","handleSubmit","username","r","data","children","className","initialValues","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","component","_c","$RefreshReg$"],"sources":["/home/draber/Development/Phase-5/Inkd-Up/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction LoginForm() {\n    const [formData, setFormData] = useState({\n        identifier: '',\n        password: '',\n    });\n\n    const validationSchema = Yup.object({\n        identifier: Yup.string().required('Username or email is required'),\n        password: Yup.string().required('Password is required'),\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const onSubmit = (values) => {\n        console.log('clicked')\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n        })\n            .then((resp) => {\n                if (resp.ok) {\n                    return resp.json();\n                } else {\n                    throw new Error('Invalid Login Credentials');\n                }\n            })\n            .then((user) => onLogin(user))\n            .catch((error) => {\n                alert(error.message);\n            })\n        console.log('Login form submitted:', values);\n    };\n\n    const onLogin = (user) => {\n        // Handle the login logic when the response is successful\n        console.log('User logged in:', user);\n    };\n    console.log(formData)\n\n\n    const handleSubmit = (values) => {\n        fetch(\"/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username: values.username,\n                password: values.password,\n            }),\n        })\n            .then((r) => {\n                if (r.ok) {\n                    r.json().then((data) => {\n                        // setUser(data.user);\n                        console.log(data)\n                        // Redirect to the user gallery upon successful login\n                        // history.push(\"/usergallery\");\n                    });\n                } else {\n                    alert(\"Invalid username or password\");\n                }\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(\"An error occurred. Please try again.\");\n            });\n    };\n\n\n\n    return (\n        <div>\n            {/* <Formik\n                initialValues={formData}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n            >\n                <Form>\n                    <div>\n                        <label htmlFor=\"identifier\">Username or Email:</label>\n                        <Field\n                            type=\"text\"\n                            id=\"identifier\"\n                            name=\"identifier\"\n                            value={formData.identifier}\n                            onChange={handleChange}\n                        />\n                        <ErrorMessage name=\"identifier\" component=\"div\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password:</label>\n                        <Field\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            value={formData.password}\n                            onChange={handleChange}\n                        />\n                        <ErrorMessage name=\"password\" component=\"div\" />\n                    </div>\n                    <button type=\"submit\">Login</button>\n                </Form>\n            </Formik > */}\n            <div className=\"form\">\n                <Formik\n                    initialValues={{ username: \"\", password: \"\" }}\n                    validationSchema={validationSchema}\n                    onSubmit={handleSubmit}\n                >\n                    <Form>\n                        <div>\n                            <label htmlFor=\"username\">User name:</label>\n                            <Field type=\"text\" id=\"username\" name=\"username\" />\n                            <ErrorMessage name=\"username\" component=\"div\" />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field type=\"password\" id=\"password\" name=\"password\" />\n                            <ErrorMessage name=\"password\" component=\"div\" />\n                        </div>\n\n                        <div>\n                            <button type=\"submit\">Submit</button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}